# configmap for dbviewer app 
apiVersion: v1
kind: ConfigMap
metadata:
  name: dbviewer-configmap
data:
  DB_HOST: mysql
  DB_PORT: "3306"
  DB_USER: "dbviewer_user"
  DB_NAME: "dbviewer_db"
  TARGET_DB: "dbviewer_db"
  TARGET_USER: "dbviewer_user"
  MYSQL_ROOT_USER: "root"
  create-db-user.sh: |
    #!/bin/bash
    set -eux 
    # Check if required environment variables are set
    if [[ -z "$TARGET_DB" || -z "$TARGET_USER" || -z "$TARGET_PASSWORD" || -z "$MYSQL_ROOT_PASSWORD" ]]; then
        echo "Error: TARGET_DB, TARGET_USER, TARGET_PASSWORD, and MYSQL_ROOT_PASSWORD environment variables must be set."
        exit 1
    fi

    # Execute all MySQL commands in one go
    mysql -h "$DB_HOST" -P "$DB_PORT" -u "$MYSQL_ROOT_USER" -p"$MYSQL_ROOT_PASSWORD" <<EOF
    CREATE DATABASE IF NOT EXISTS \`$TARGET_DB\`;

    -- Check if the user exists, and create or alter the user accordingly
    CREATE USER IF NOT EXISTS '$TARGET_USER'@'%' IDENTIFIED BY '$TARGET_PASSWORD';
    GRANT ALL PRIVILEGES ON \`$TARGET_DB\`.* TO '$TARGET_USER'@'%';

    -- Grant all privileges on the target database to the root user
    GRANT ALL PRIVILEGES ON \`$TARGET_DB\`.* TO 'root'@'localhost';

    -- Create tables in the target database
    USE \`$TARGET_DB\`;

    CREATE TABLE IF NOT EXISTS users (
      id INT AUTO_INCREMENT PRIMARY KEY,
      username VARCHAR(50) NOT NULL UNIQUE,
      email VARCHAR(100) NOT NULL UNIQUE,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS posts (
      id INT AUTO_INCREMENT PRIMARY KEY,
      user_id INT NOT NULL,
      title VARCHAR(255) NOT NULL,
      content TEXT NOT NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    );

    CREATE TABLE IF NOT EXISTS comments (
      id INT AUTO_INCREMENT PRIMARY KEY,
      post_id INT NOT NULL,
      user_id INT NOT NULL,
      comment TEXT NOT NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    );

    -- create another database and tables and grant privileges to the target user 
    CREATE DATABASE IF NOT EXISTS \`school\`;
    CREATE TABLE IF NOT EXISTS \`school\`.students (
      id INT AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(100) NOT NULL,
      age INT NOT NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS \`school\`.courses (
      id INT AUTO_INCREMENT PRIMARY KEY,
      course_name VARCHAR(100) NOT NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS \`school\`.enrollments (
      id INT AUTO_INCREMENT PRIMARY KEY,
      student_id INT NOT NULL,
      course_id INT NOT NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (student_id) REFERENCES students(id) ON DELETE CASCADE,
      FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE
    );

    -- Grant all privileges on the school database to the target user
    GRANT ALL PRIVILEGES ON \`school\`.* TO '$TARGET_USER'@'%';
    
    -- Flush privileges to apply changes
    FLUSH PRIVILEGES;
    EOF

    echo "Database and user setup completed successfully..."
    # Exit the script
    exit 0

